import sys
import getopt
import os

c_file = 'bg_err_generate.c'
header = sys.argv[1]
fh = open(header,'r')
text = fh.read()
fh.close()

prefix = 'bg_err_'

labels = []
lines = text.split('\n')
for line in lines :
    tokens = line.split(prefix)
    if len(tokens) < 2 : continue
    tokens = tokens[1].split()
    tokens = tokens[0].split('=')
    labels.append(tokens[0])

fh = open(c_file,'w')
fh.write('/* auto generated by %s */' % (sys.argv[0]) + '''
#include <stdio.h>
#include "%s"''' % (header) + '''

#define P(X) printf("0x%04x : '%s'\\n",X,#X)

int main(int argc, char *const*argv) {
  (void)argc;
  (void)argv;
'''
)
for label in labels :
    fh.write('  P(%s%s);\n'%(prefix,label))
fh.write('''  return 0;
}''')
fh.close()

if os.system('gcc -Wall -Wextra %s'%(c_file)) :
    raise runtimeError

os.unlink(c_file)

fh = os.popen('./a.out','r')
text = fh.read()
fh.close()

lines = text.split('\n')
if 0 == len(lines[-1]) : lines.pop(-1) 

fh = open('bg_err.py','w')
fh.write('''#! /bin/env python3

import sys
bg_err = {\n  ''')
fh.write(',\n  '.join(lines))
fh.write('''}

if __name__ == '__main__' :
    argv = sys.argv
    argc = len(argv)
    if argc < 2 :
        print('Usage %s errorcode [ errorcode [ ... ] ]'%(argv[0]))
        quit()
    for ec in argv[1:] :
        if len(ec) > 2 and ec.lower()[:2] == '0x' :
            ec = int(ec[2:],16)
        else :
            ec = int(ec)
        name = bg_err.get(ec)
        if None == name : name = '*UNKNOWN*'
        print('%04x: %s'%(ec,name))
''')
fh.close()

